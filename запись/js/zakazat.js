document.addEventListener('DOMContentLoaded', function() {
    // –≠–ª–µ–º–µ–Ω—Ç—ã –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const contactModal = document.getElementById('contact-modal');
    const closeModalBtn = document.querySelector('.close-contact-modal');
    const contactForm = document.getElementById('contact-modal-form');
    
    // –ö–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const openModalButtons = [
        ...document.querySelectorAll('.order-btn'), // –ö–Ω–æ–ø–∫–∏ "–ó–∞–∫–∞–∑–∞—Ç—å —Å–∞–π—Ç"
        ...document.querySelectorAll('.zakaz-btn'), // –ö–Ω–æ–ø–∫–∏ –≤ —Å–µ–∫—Ü–∏–∏ –∑–∞–∫–∞–∑–∞
        document.querySelector('.contact-btn') // –ö–Ω–æ–ø–∫–∞ "–ö–æ–Ω—Ç–∞–∫—Ç—ã" –≤ —Ö–µ–¥–µ—Ä–µ
    ].filter(btn => btn !== null);

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    openModalButtons.forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            openContactModal();
        });
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    closeModalBtn.addEventListener('click', closeContactModal);
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    contactModal.addEventListener('click', function(e) {
        if (e.target === contactModal) {
            closeContactModal();
        }
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ ESC
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && contactModal.classList.contains('show')) {
            closeContactModal();
        }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã
    contactForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const name = document.getElementById('modal-name').value;
        const phone = document.getElementById('modal-phone').value;
        const submitBtn = contactForm.querySelector('.contact-modal-btn');
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!name || !phone) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
        const timestamp = new Date().toLocaleString('ru-RU');
        const message = `üü¢ –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê ZAPISALL\n\n` +
                       `üìÖ –í—Ä–µ–º—è: ${timestamp}\n` +
                       `üë§ –ò–º—è: ${name}\n` +
                       `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\n`;
        
        // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –∏ –º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç
        const originalText = submitBtn.textContent;
        submitBtn.textContent = '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º...';
        submitBtn.disabled = true;
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
        sendToTelegram(message)
            .then(() => {
                submitBtn.textContent = '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!';
                submitBtn.style.background = '#4CAF50';
                
                setTimeout(() => {
                    closeContactModal();
                    contactForm.reset();
                    submitBtn.textContent = originalText;
                    submitBtn.disabled = false;
                    submitBtn.style.background = '';
                }, 1500);
            })
            .catch(error => {
                console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
                submitBtn.textContent = '–û—à–∏–±–∫–∞!';
                submitBtn.style.background = '#f44336';
                
                setTimeout(() => {
                    submitBtn.textContent = originalText;
                    submitBtn.disabled = false;
                    submitBtn.style.background = '';
                }, 2000);
            });
    });

    function openContactModal() {
        contactModal.classList.add('show');
        document.body.style.overflow = 'hidden'; // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª
    }

    function closeContactModal() {
        contactModal.classList.remove('show');
        document.body.style.overflow = ''; // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª
        contactForm.reset(); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
    }

function sendToTelegram(message) {
    const botToken = '8427043373:AAFZpj76jI9T3lx_45jSR5QitScWoGd4EwY';
    const chatIds = ['446179396', '8023919731'];
    
    // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –ø—Ä–æ–º–∏—Å–æ–≤ –¥–ª—è –≤—Å–µ—Ö –æ—Ç–ø—Ä–∞–≤–æ–∫
    const sendPromises = chatIds.map(chatId => {
        const url = `https://api.telegram.org/bot${botToken}/sendMessage`;
        
        const formData = new FormData();
        formData.append('chat_id', chatId);
        formData.append('text', message);
        formData.append('parse_mode', 'HTML');
        
        return fetch(url, {
            method: 'POST',
            body: formData
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');
            }
            return response.json();
        });
    });
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ–º–∏—Å, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –∫–æ–≥–¥–∞ –≤—Å–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–≤–µ—Ä—à–∞—Ç—Å—è
    return Promise.all(sendPromises);
}
});