document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('consultation-form');
    
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
        const name = document.getElementById('name').value;
        const phone = document.getElementById('phone').value;
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!name || !phone) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
        const timestamp = new Date().toLocaleString('ru-RU');
        const message = `üü¢ –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê ZAPISALL\n\n` +
                       `üìÖ –í—Ä–µ–º—è: ${timestamp}\n` +
                       `üë§ –ò–º—è: ${name}\n` +
                       `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\n`;
        
        // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –∏ –º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç
        const submitBtn = form.querySelector('.contacts-btn');
        const originalText = submitBtn.textContent;
        submitBtn.textContent = '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º...';
        submitBtn.disabled = true;
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram –±–æ—Ç
        sendToTelegram(message)
            .then(() => {
                // –£—Å–ø–µ—à–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
                submitBtn.textContent = '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!';
                submitBtn.style.background = '#4CAF50';
                
                setTimeout(() => {
                    submitBtn.textContent = originalText;
                    submitBtn.disabled = false;
                    submitBtn.style.background = '';
                    form.reset();
                }, 2000);
            })
            .catch((error) => {
                // –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
                console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
                submitBtn.textContent = '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏';
                submitBtn.style.background = '#f44336';
                
                setTimeout(() => {
                    submitBtn.textContent = originalText;
                    submitBtn.disabled = false;
                    submitBtn.style.background = '';
                }, 2000);
            });
    });
    
    async function sendToTelegram(message) {
        const botToken = '8427043373:AAFZpj76jI9T3lx_45jSR5QitScWoGd4EwY';
        const chatIds = ['446179396', '8023919731'];
        
        console.log('–ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –¥–ª—è —á–∞—Ç–æ–≤:', chatIds);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        for (let i = 0; i < chatIds.length; i++) {
            const chatId = chatIds[i];
            
            try {
                const url = `https://api.telegram.org/bot${botToken}/sendMessage`;
                
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        chat_id: chatId,
                        text: message,
                        parse_mode: 'HTML'
                    })
                });
                
                const data = await response.json();
                console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è ${chatId}:`, data);
                
                // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏ (1 —Å–µ–∫—É–Ω–¥–∞)
                if (i < chatIds.length - 1) {
                    await new Promise(resolve => setTimeout(resolve, 1000));
                }
                
            } catch (error) {
                console.error(`–û—à–∏–±–∫–∞ –¥–ª—è ${chatId}:`, error);
                // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–ª–µ–¥—É—é—â–µ–º—É, –¥–∞–∂–µ –µ—Å–ª–∏ –æ—à–∏–±–∫–∞
            }
        }
        
        console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è –≤—Å–µ—Ö —á–∞—Ç–æ–≤');
    }
});